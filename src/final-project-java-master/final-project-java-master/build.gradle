plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 쿼리 파라미터 추가 외부 로그 남기기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // 입력값 검증 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // api 사용 방법을 명세한 문서 라이브러리 (swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // json web token 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // 스프링 시큐리티 모듈
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // 파일 업로드 라이브러리
    implementation 'commons-io:commons-io:2.8.0'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Google Login API
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'

    // 자바 언어를 통해 smtp 통신을 할 수 있게 하는 라이브러리
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'

    // 구글
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'net.nurigo:sdk:4.3.0'

    // googleLogin
    implementation 'com.google.api-client:google-api-client:1.32.2'
    implementation 'com.google.api-client:google-api-client-gson:1.32.2'

    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // S3
    implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'


}

tasks.named('test') {
//    useJUnitPlatform()
    exclude '**/*' //빌드시 빌드 과정에서 전체 테스트 로직 생략
}

def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}


